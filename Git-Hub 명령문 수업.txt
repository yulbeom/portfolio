git으로 버전 관리하기

- git 환경 설정
$ git config --global user.name "사용자명"
$ git config --global user.email "사용자email"

- 리눅스 명령어 연습
$ls  : 현재 디렉토리 목록 확인
$ls [-l] : long format 으로 확인
$ls [-la] : .으로 시작하는 파일과 디렉토리 확인
$ls -a

- 현재 작업 경로 확인
$pwd
- 상위 디렉토리 이동
$ cd ../
- 홈디렉토리 이동
$ cd ~

- 디렉토리 생성 -> 폴더 생성
$ mkdir 디렉토리명
- 디렉토리 삭제
$ rmdir 디렉토리명 -> 비어있는 디렉토리만 삭제 가능
- 비어있지 않은 디렉토리 삭제
$ rm -r 디렉토리명
- 무조건 삭제 ( powerful 하므로 조심 !! )
$ rm -rf 디렉토리명

-- 파일 편집
$ vi hello.txt

문제)
1. 홈디렉토리로 이동  
2. 새 디렉토리 mine 생성   
3. mine 디렉토리로 이동   
4. 부모 디렉토리로 이동   
5. 현재 경로 확인            
6. 디렉토리의 내용을 보여줌    
7. 디렉토리의 내용을 자세하게 보여줌    
8. 숨김 파일도 보여줌                          
9. vi 명령어를 사용하여 f1.txt 파일 생성 -> 내용은 임의로 작성 
10. cat을 사용하여 f1.txt  파일의 내용을 화면에 보여 줌   
11. 터미널 창의 내용을 지움   
12. 터미널 창을 종료 

==> 깃으로 버전 관리하기  ( working tree -> stage -> repository ) 
$ cd ~
-> 홈 디렉토리에 hello-git  디렉토리 생성
$ mkdir hello-git

-> hello-git 디렉토리로 이동
$ cd hello-git

-> hello-git 디렉토리에서 git 초기화
$ git init   => .git 디렉토리가 생성됨

$ vi hello.txt ->문서 입력 -> 저장
$ git add hello.txt  -> stage에 추가
$ git status
$ git commit -m 'mess1'   -> repository 에 저장
$ git log -> repository 확인

$git commit --amend  --> 마지막 메세지만 수정 가능
$ vi hello.txt

-- vi 편집기 명령어
- a, i : 입력모드
- esc : 명령모드

- r : 1글자 수정 
- cw : 단어 수정 -> esc 누를때 까지
- R : 커서부터 esc키 누를때까지 글자 수정
- x : 1글자 삭제 -> 10x : 10글자 삭제
- dd : 1 라인 삭제 -> 10dd : 10라인 삭제
- D : 커서부터 라인 끝까지 삭제
- :w -> 저장
- :q -> 빠져 나가기
- :q! -> 저장하지 않고 빠져 나가기

- :1 -> 첫라인으로 이동,  :10 -> 10라인 이동
- :$ -> 마지막 라인 이동
- $ -> 해당 라인의 끝으로 이동

-- 파일 수정 후 stage에 올리기 전에 이전에 commit한 파일로 되돌리기
$ git checkout -- 파일명
-- 파일 수정 후 staged에 올린 파일을 이전에 commit한 파일로 되돌리기
1. $ git restore 파일명
2. $ git checkout -- 파일명

-- 최신 커밋을 되돌리기
$ git reset HEAD^( repository에 최근에 들어간 커밋을 없에고 초본 커밋을 stage로 가져옴 )

-- 작업 트리에서 수정한 파일을 되돌리기
$ git reset -- hard 커밋해시   -> stage로 이전 파일 저장
 -- stage의 파일을 restore 하면 이전 버전으로 복귀

-- $ rm -rf *
-- $ git init

-- 파일을 스테이지에 올린 상태로 되돌아 가기
$ git reset HEAD 파일명  -> 수정전의 파일이 stage에 있는 상태
$ git restore  파일명

-- 최신 커밋 되돌리기
$ git reset HEAD^  ->  가장 마지막에 했던 커밋을 되돌릴 때 , stage에서도 내려 옴

-- 특정 버전 상태로 되돌릴 때
$ git reset -- hard 커밋해시
$ git log   -> 특정 버전이  HEAD로 지정, 이후 커밋은 삭제 됨

-- 작업 트리에서 수정한 파일 되돌리기
$ git revert 커밋해시
$ git log  -> 해당 커밋 해시의 직전 커밋으로 돌아감, 이후 커밋 그대로 유지

문) 
1. git 디렉토리 생성 -> git_test
2. git 초기화
3. git 상태 확인
4. ch01.txt 파일을 생성
5. 커밋 메세지 'ch01'을 붙여 커밋
6. ch01.txt 파일 수정
7. 스테이징과 커밋을 동시에 메세지 'ch02'
8. 커밋 정보 확인
9. 최근 커밋 취소













